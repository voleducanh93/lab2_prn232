@page
@model ProductManagementRazorPages.Pages.Cosmetics.IndexModel
@{
    ViewData["Title"] = "Cosmetics List";
}


<div class="container-fluid">

    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2>
                <i class="fas fa-users me-2"></i>
                Cosmetics
            </h2>
            <p class="text-muted mb-0">Manage cosmetics</p>
        </div>
        <div>
            @if (Model.CanManage){
            <p>
                <button class="btn btn-success mb-3" id="btnCreate" type="button">
                    <i class="fa-solid fa-plus"></i> Create New
                </button>

            </p>
            }
        </div>
    </div>

    <form asp-action="Index" method="get" class="mb-3 d-flex">
        <input type="text" name="searchTerm" class="form-control me-2" placeholder="Search accounts..."
               value="@Model.ViewModel.SearchTerm" style="max-width: 300px;" />
        <button type="submit" class="btn btn-primary me-2">
            <i class="fas fa-search"></i> Search
        </button>
        @if (!string.IsNullOrEmpty(Model.ViewModel.SearchTerm))
        {
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-times"></i> Clear
            </a>
        }
    </form>

    <table class="table table-bordered table-striped table-hover shadow">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Skin Type</th>
                <th>Price</th>
                <th>Category</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ViewModel.Cosmetics)
            {
                <tr>
                    <td>@item.CosmeticId</td>
                    <td>@item.CosmeticName</td>
                    <td>@item.SkinType</td>
                    <td>@item.DollarPrice</td>
                    <td>@item.Category.CategoryName</td>
                     @if (Model.CanManage)
    {
                    <td>
                        @* <a href="javascript:void(0)" class="btn-edit" data-id="@item.CosmeticId">
                            <i class="fas fa-edit"></i> Edit
                        </a> *@
                        <button type="button" class="btn btn-warning btn-sm btn-edit" data-id="@item.CosmeticId">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        |
                        <button type="button" class="btn btn-danger btn-sm btn-delete" data-id="@item.CosmeticId" data-name="@item.CosmeticName">
                            <i class="fas fa-trash-alt"></i> Delete
                        </button>

                    </td>
                    }
                </tr>
            }
        </tbody>

    </table>
    <ul class="pagination">
        @if (Model.ViewModel.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-page="Index" asp-route-pageIndex="@(Model.ViewModel.PageIndex - 1)" asp-route-searchTerm="@Model.ViewModel.SearchTerm">Previous</a>
            </li>
        }

        @for (int i = 1; i <= Model.ViewModel.TotalPages; i++)
        {
            <li class="page-item @(i == Model.ViewModel.PageIndex ? "active" : "")">
                <a class="page-link" asp-page="Index" asp-route-pageIndex="@i" asp-route-searchTerm="@Model.ViewModel.SearchTerm">@i</a>
            </li>
        }

        @if (Model.ViewModel.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-page="Index" asp-route-pageIndex="@(Model.ViewModel.PageIndex + 1)" asp-route-searchTerm="@Model.ViewModel.SearchTerm">Next</a>
            </li>
        }
    </ul>

    <!-- Create Modal -->
    <div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content" id="createModalContent">
                <!-- _CreatePartial will be loaded here via AJAX -->
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div class="modal fade" id="modalContainer" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content" id="modalBody">
                <!-- _EditPartial will be injected here via AJAX -->
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="deleteForm">
                    @Html.AntiForgeryToken()
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="id" id="deleteCosmeticId" />
                        <p>Are you sure you want to delete <strong id="deleteCosmeticName"></strong>?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-danger">Yes, Delete</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

</div>
@section Scripts {
    <script>
        $(document).ready(function () {

            // Load _CreatePartial into modal when button is clicked
            $('#btnCreate').on('click', function () {
                $.get('/Cosmetics/Create', function (html) {
                    $('#createModalContent').html(html);
                    $('#createModal').modal('show');
                });
            });

            // Submit create form with AJAX
            $(document).on('submit', '#createForm', function (e) {
                e.preventDefault();
                const token = $('input[name="__RequestVerificationToken"]').val();
                $.ajax({
                    type: 'POST',
                    url: '/Cosmetics/Create',
                    data: $(this).serialize(),
                    headers: {
                        'RequestVerificationToken': token
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#createModal').modal('hide');
                            location.reload(); // Reload the table
                        } else {
                            $('#createModalContent').html(response); // Re-render form with validation errors
                        }
                    }
                });
            });

            // Load edit modal
            $(document).on("click", ".btn-edit", function () {
                const id = $(this).data("id");
                        $.get(`/Cosmetics/Edit/${id}`, function (html) {
            $("#modalBody").html(html);
            $("#modalContainer").modal("show");
        });

            });

            // Submit edit form
            $(document).on("submit", "#editForm", function (e) {
                e.preventDefault();
                const token = $('input[name="__RequestVerificationToken"]').val();
                const form = $(this);
                $.ajax({
                    type: "POST",
                    url: "/Cosmetics/Edit",
                    data: form.serialize(),
                     headers: {
                        'RequestVerificationToken': token
                    },
                    success: function (res) {
                        if (res.success) {
                            $("#modalContainer").modal("hide");
                            location.reload(); // Refresh list
                        } else {
                            $("#modalBody").html(res);
                        }
                    }
                });
            });
                    // Open Delete Modal
        $(document).on("click", ".btn-delete", function () {
            const id = $(this).data("id");
            const name = $(this).data("name");

            $("#deleteCosmeticId").val(id);
            $("#deleteCosmeticName").text(name);
            $("#deleteModal").modal("show");
        });

        // Submit delete form
        $(document).on("submit", "#deleteForm", function (e) {
            e.preventDefault();
            const id = $("#deleteCosmeticId").val();
              const token = $('input[name="__RequestVerificationToken"]').val();
            $.ajax({
                type: "POST",
                        url: `/Cosmetics/Delete`,
        data: { id: id },
                headers: {
                        'RequestVerificationToken': token
                    },
                success: function (res) {
                    if (res.success) {
                        $("#deleteModal").modal("hide");
                        location.reload(); // Refresh the table
                    } else {
                        alert("Delete failed.");
                    }
                }
            });
        });
        });
    </script>
}
