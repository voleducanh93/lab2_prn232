@page
@model ProductManagementRazorPages.Pages.Cosmetics.IndexModel
@{
    ViewData["Title"] = "Cosmetics List";
}


<div class="container-fluid">

    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2>
                <i class="fas fa-users me-2"></i>
                Cosmetics
            </h2>
            <p class="text-muted mb-0">Manage cosmetics</p>
        </div>
        <div>
            <p>
                <a asp-page="Create" class="btn btn-success mb-3">
                    <i class="fa-solid fa-plus"></i> Create New
                </a>
            </p>
        </div>
    </div>

    <form asp-action="Index" method="get" class="mb-3 d-flex">
        <input type="text" name="searchTerm" class="form-control me-2" placeholder="Search accounts..."
               value="@Model.ViewModel.SearchTerm" style="max-width: 300px;" />
        <button type="submit" class="btn btn-primary me-2">
            <i class="fas fa-search"></i> Search
        </button>
        @if (!string.IsNullOrEmpty(Model.ViewModel.SearchTerm))
        {
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="fas fa-times"></i> Clear
            </a>
        }
    </form>

    <table class="table table-bordered table-striped table-hover shadow">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Skin Type</th>
                <th>Price</th>
                <th>Category</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ViewModel.Cosmetics)
            {
                <tr>
                    <td>@item.CosmeticId</td>
                    <td>@item.CosmeticName</td>
                    <td>@item.SkinType</td>
                    <td>@item.DollarPrice</td>
                    <td>@item.CategoryId</td>
                    <td>
                        <a asp-page="Edit" asp-route-id="@item.CosmeticId">Edit</a> |
                        <a asp-page="Delete" asp-route-id="@item.CosmeticId">Delete</a>
                    </td>
                </tr>
            }
        </tbody>

    </table>
    <ul class="pagination">
        @if (Model.ViewModel.HasPreviousPage)
        {
            <li class="page-item">
                <a class="page-link" asp-page="Index" asp-route-pageIndex="@(Model.ViewModel.PageIndex - 1)" asp-route-searchTerm="@Model.ViewModel.SearchTerm">Previous</a>
            </li>
        }

        @for (int i = 1; i <= Model.ViewModel.TotalPages; i++)
        {
            <li class="page-item @(i == Model.ViewModel.PageIndex ? "active" : "")">
                <a class="page-link" asp-page="Index" asp-route-pageIndex="@i" asp-route-searchTerm="@Model.ViewModel.SearchTerm">@i</a>
            </li>
        }

        @if (Model.ViewModel.HasNextPage)
        {
            <li class="page-item">
                <a class="page-link" asp-page="Index" asp-route-pageIndex="@(Model.ViewModel.PageIndex + 1)" asp-route-searchTerm="@Model.ViewModel.SearchTerm">Next</a>
            </li>
        }
    </ul>


</div>